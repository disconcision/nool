# General notes on github actions: Note that both the working directory
# and environment variables generally are not shared between steps.
name: deploy nool
on: [push]
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      # NOTE: position the below lines in the code between two steps
      # and uncomment them to open an ssh connection at that point:
      #- name: Debugging with ssh
      #  uses: lhotari/action-upterm@v1
      - name: Checkout nool repo on current branch # STEP 1
        uses: actions/checkout@v2
        with:
          path: source
      - name: Add name of current branch to environment as BRANCH_NAME
        uses: nelonoel/branch-name@v1.0.1
      - name: Retrieve build environment if cached # STEP 2
        id: build-cache
        uses: actions/cache@v2
        with:
          path: '/home/runner/.opam/'
          key: ${{ runner.os }}-modules-${{ hashFiles('./source/pnp-lock.yaml') }}
      #- name: Debugging with ssh
      #  uses: lhotari/action-upterm@v1
      #curl -fsSL https://get.pnpm.io/install.sh | sh - || true
      - name: Install dependencies and build nool # STEP 3
        run: |
          pwd
          ls
          node --version
          npm install --global pnpm && SHELL=bash pnpm setup && source /root/.bashrc
          source /home/runner/.bashrc
          pnpm install
          pnpm run build
        working-directory: ./source
      - name: Checkout website build artifacts repo # STEP 4
        uses: actions/checkout@v2
        with:
          repository: disconcision/disconcision.github.io
          token: ${{ secrets.DEPLOY_NOOL }}
          path: server
      - name: Clear any old build of this branch # STEP 5
        run: if [ -d "nool/${BRANCH_NAME}" ] ; then rm -rf "nool/${BRANCH_NAME}" ; fi
        working-directory: ./server
      - name: Copy in newly built source # STEP 6
        run: |
          mkdir "./server/nool/${BRANCH_NAME}" &&
          cp -r "./source/dist"/* "./server/nool/${BRANCH_NAME}" &&
          if [ "${BRANCH_NAME}" == "plus" ]
          then
            cp -r "./source/dist"/* "./server/nool"
          fi
      - name: Commit to website aka deploy # STEP 7
        run: |
          git config user.name github-deploy-action
          git config user.email nool-deploy@disconcision.com
          git add -A
          git status
          git diff-index --quiet HEAD || (git commit -m "github-deploy-action-${BRANCH_NAME}"; git push)
        working-directory: ./server